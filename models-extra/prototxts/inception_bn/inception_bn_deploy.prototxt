input: "data"
input_dim: 1
input_dim: 3
input_dim: 227
input_dim: 227
layer {
  name: "conv1_7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_7x7_s2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1_7x7_s2_bn"
  type: "BatchNorm"
  bottom: "conv1_7x7_s2"
  top: "conv1_7x7_s2"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1_7x7_relu"
  type: "ReLU"
  bottom: "conv1_7x7_s2"
  top: "conv1_7x7_s2"
}
layer {
  name: "pool1_3x3_s2"
  type: "Pooling"
  bottom: "conv1_7x7_s2"
  top: "pool1_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_3x3_reduce"
  type: "Convolution"
  bottom: "pool1_3x3_s2"
  top: "conv2_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "conv2_3x3_reduce"
  top: "conv2_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_3x3_reduce_relu"
  type: "ReLU"
  bottom: "conv2_3x3_reduce"
  top: "conv2_3x3_reduce"
}
layer {
  name: "conv2_3x3"
  type: "Convolution"
  bottom: "conv2_3x3_reduce"
  top: "conv2_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2_3x3_bn"
  type: "BatchNorm"
  bottom: "conv2_3x3"
  top: "conv2_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_3x3_relu"
  type: "ReLU"
  bottom: "conv2_3x3"
  top: "conv2_3x3"
}
layer {
  name: "pool2_3x3_s2"
  type: "Pooling"
  bottom: "conv2_3x3"
  top: "pool2_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a_1x1"
  type: "Convolution"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3a_1x1"
  top: "inception_3a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_1x1"
  type: "ReLU"
  bottom: "inception_3a_1x1"
  top: "inception_3a_1x1"
}
layer {
  name: "inception_3a_3x3_reduce"
  type: "Convolution"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3_reduce"
}
layer {
  name: "inception_3a_3x3"
  type: "Convolution"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3a_3x3"
  top: "inception_3a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_3x3"
  type: "ReLU"
  bottom: "inception_3a_3x3"
  top: "inception_3a_3x3"
}
layer {
  name: "inception_3a_5x5_reduce"
  type: "Convolution"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a_5x5_reduce"
  top: "inception_3a_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a_5x5_reduce"
  top: "inception_3a_5x5_reduce"
}
layer {
  name: "inception_3a_5x5"
  type: "Convolution"
  bottom: "inception_3a_5x5_reduce"
  top: "inception_3a_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3a_5x5"
  top: "inception_3a_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_5x5"
  type: "ReLU"
  bottom: "inception_3a_5x5"
  top: "inception_3a_5x5"
}
layer {
  name: "inception_3a_pool"
  type: "Pooling"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a_pool_proj"
  type: "Convolution"
  bottom: "inception_3a_pool"
  top: "inception_3a_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_pool_proj"
}
layer {
  name: "inception_3a_output"
  type: "Concat"
  bottom: "inception_3a_1x1"
  bottom: "inception_3a_3x3"
  bottom: "inception_3a_5x5"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_output"
}
layer {
  name: "inception_3b_1x1"
  type: "Convolution"
  bottom: "inception_3a_output"
  top: "inception_3b_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3b_1x1"
  top: "inception_3b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_1x1"
  type: "ReLU"
  bottom: "inception_3b_1x1"
  top: "inception_3b_1x1"
}
layer {
  name: "inception_3b_3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a_output"
  top: "inception_3b_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3_reduce"
}
layer {
  name: "inception_3b_3x3"
  type: "Convolution"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3b_3x3"
  top: "inception_3b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_3x3"
  type: "ReLU"
  bottom: "inception_3b_3x3"
  top: "inception_3b_3x3"
}
layer {
  name: "inception_3b_5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a_output"
  top: "inception_3b_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b_5x5_reduce"
  top: "inception_3b_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b_5x5_reduce"
  top: "inception_3b_5x5_reduce"
}
layer {
  name: "inception_3b_5x5"
  type: "Convolution"
  bottom: "inception_3b_5x5_reduce"
  top: "inception_3b_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3b_5x5"
  top: "inception_3b_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_5x5"
  type: "ReLU"
  bottom: "inception_3b_5x5"
  top: "inception_3b_5x5"
}
layer {
  name: "inception_3b_pool"
  type: "Pooling"
  bottom: "inception_3a_output"
  top: "inception_3b_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b_pool_proj"
  type: "Convolution"
  bottom: "inception_3b_pool"
  top: "inception_3b_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_pool_proj"
}
layer {
  name: "inception_3b_output"
  type: "Concat"
  bottom: "inception_3b_1x1"
  bottom: "inception_3b_3x3"
  bottom: "inception_3b_5x5"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_output"
}
layer {
  name: "pool3_3x3_s2"
  type: "Pooling"
  bottom: "inception_3b_output"
  top: "pool3_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a_1x1"
  type: "Convolution"
  bottom: "pool3_3x3_s2"
  top: "inception_4a_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4a_1x1"
  top: "inception_4a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_1x1"
  type: "ReLU"
  bottom: "inception_4a_1x1"
  top: "inception_4a_1x1"
}
layer {
  name: "inception_4a_3x3_reduce"
  type: "Convolution"
  bottom: "pool3_3x3_s2"
  top: "inception_4a_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a_3x3_reduce"
  top: "inception_4a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a_3x3_reduce"
  top: "inception_4a_3x3_reduce"
}
layer {
  name: "inception_4a_3x3"
  type: "Convolution"
  bottom: "inception_4a_3x3_reduce"
  top: "inception_4a_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4a_3x3"
  top: "inception_4a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_3x3"
  type: "ReLU"
  bottom: "inception_4a_3x3"
  top: "inception_4a_3x3"
}
layer {
  name: "inception_4a_5x5_reduce"
  type: "Convolution"
  bottom: "pool3_3x3_s2"
  top: "inception_4a_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a_5x5_reduce"
  top: "inception_4a_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a_5x5_reduce"
  top: "inception_4a_5x5_reduce"
}
layer {
  name: "inception_4a_5x5"
  type: "Convolution"
  bottom: "inception_4a_5x5_reduce"
  top: "inception_4a_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4a_5x5"
  top: "inception_4a_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_5x5"
  type: "ReLU"
  bottom: "inception_4a_5x5"
  top: "inception_4a_5x5"
}
layer {
  name: "inception_4a_pool"
  type: "Pooling"
  bottom: "pool3_3x3_s2"
  top: "inception_4a_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a_pool_proj"
  type: "Convolution"
  bottom: "inception_4a_pool"
  top: "inception_4a_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4a_pool_proj"
  top: "inception_4a_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a_pool_proj"
  top: "inception_4a_pool_proj"
}
layer {
  name: "inception_4a_output"
  type: "Concat"
  bottom: "inception_4a_1x1"
  bottom: "inception_4a_3x3"
  bottom: "inception_4a_5x5"
  bottom: "inception_4a_pool_proj"
  top: "inception_4a_output"
}
layer {
  name: "inception_4b_1x1"
  type: "Convolution"
  bottom: "inception_4a_output"
  top: "inception_4b_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4b_1x1"
  top: "inception_4b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_1x1"
  type: "ReLU"
  bottom: "inception_4b_1x1"
  top: "inception_4b_1x1"
}
layer {
  name: "inception_4b_3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a_output"
  top: "inception_4b_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b_3x3_reduce"
  top: "inception_4b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b_3x3_reduce"
  top: "inception_4b_3x3_reduce"
}
layer {
  name: "inception_4b_3x3"
  type: "Convolution"
  bottom: "inception_4b_3x3_reduce"
  top: "inception_4b_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4b_3x3"
  top: "inception_4b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_3x3"
  type: "ReLU"
  bottom: "inception_4b_3x3"
  top: "inception_4b_3x3"
}
layer {
  name: "inception_4b_5x5_reduce"
  type: "Convolution"
  bottom: "inception_4a_output"
  top: "inception_4b_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b_5x5_reduce"
  top: "inception_4b_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4b_5x5_reduce"
  top: "inception_4b_5x5_reduce"
}
layer {
  name: "inception_4b_5x5"
  type: "Convolution"
  bottom: "inception_4b_5x5_reduce"
  top: "inception_4b_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4b_5x5"
  top: "inception_4b_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_5x5"
  type: "ReLU"
  bottom: "inception_4b_5x5"
  top: "inception_4b_5x5"
}
layer {
  name: "inception_4b_pool"
  type: "Pooling"
  bottom: "inception_4a_output"
  top: "inception_4b_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b_pool_proj"
  type: "Convolution"
  bottom: "inception_4b_pool"
  top: "inception_4b_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4b_pool_proj"
  top: "inception_4b_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b_pool_proj"
  top: "inception_4b_pool_proj"
}
layer {
  name: "inception_4b_output"
  type: "Concat"
  bottom: "inception_4b_1x1"
  bottom: "inception_4b_3x3"
  bottom: "inception_4b_5x5"
  bottom: "inception_4b_pool_proj"
  top: "inception_4b_output"
}
layer {
  name: "inception_4c_1x1"
  type: "Convolution"
  bottom: "inception_4b_output"
  top: "inception_4c_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4c_1x1"
  top: "inception_4c_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_1x1"
  type: "ReLU"
  bottom: "inception_4c_1x1"
  top: "inception_4c_1x1"
}
layer {
  name: "inception_4c_3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b_output"
  top: "inception_4c_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c_3x3_reduce"
  top: "inception_4c_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c_3x3_reduce"
  top: "inception_4c_3x3_reduce"
}
layer {
  name: "inception_4c_3x3"
  type: "Convolution"
  bottom: "inception_4c_3x3_reduce"
  top: "inception_4c_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4c_3x3"
  top: "inception_4c_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_3x3"
  type: "ReLU"
  bottom: "inception_4c_3x3"
  top: "inception_4c_3x3"
}
layer {
  name: "inception_4c_5x5_reduce"
  type: "Convolution"
  bottom: "inception_4b_output"
  top: "inception_4c_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c_5x5_reduce"
  top: "inception_4c_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4c_5x5_reduce"
  top: "inception_4c_5x5_reduce"
}
layer {
  name: "inception_4c_5x5"
  type: "Convolution"
  bottom: "inception_4c_5x5_reduce"
  top: "inception_4c_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4c_5x5"
  top: "inception_4c_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_5x5"
  type: "ReLU"
  bottom: "inception_4c_5x5"
  top: "inception_4c_5x5"
}
layer {
  name: "inception_4c_pool"
  type: "Pooling"
  bottom: "inception_4b_output"
  top: "inception_4c_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c_pool_proj"
  type: "Convolution"
  bottom: "inception_4c_pool"
  top: "inception_4c_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4c_pool_proj"
  top: "inception_4c_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c_pool_proj"
  top: "inception_4c_pool_proj"
}
layer {
  name: "inception_4c_output"
  type: "Concat"
  bottom: "inception_4c_1x1"
  bottom: "inception_4c_3x3"
  bottom: "inception_4c_5x5"
  bottom: "inception_4c_pool_proj"
  top: "inception_4c_output"
}
layer {
  name: "inception_4d_1x1"
  type: "Convolution"
  bottom: "inception_4c_output"
  top: "inception_4d_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4d_1x1"
  top: "inception_4d_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_1x1"
  type: "ReLU"
  bottom: "inception_4d_1x1"
  top: "inception_4d_1x1"
}
layer {
  name: "inception_4d_3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c_output"
  top: "inception_4d_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 144
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d_3x3_reduce"
  top: "inception_4d_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d_3x3_reduce"
  top: "inception_4d_3x3_reduce"
}
layer {
  name: "inception_4d_3x3"
  type: "Convolution"
  bottom: "inception_4d_3x3_reduce"
  top: "inception_4d_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4d_3x3"
  top: "inception_4d_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_3x3"
  type: "ReLU"
  bottom: "inception_4d_3x3"
  top: "inception_4d_3x3"
}
layer {
  name: "inception_4d_5x5_reduce"
  type: "Convolution"
  bottom: "inception_4c_output"
  top: "inception_4d_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d_5x5_reduce"
  top: "inception_4d_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4d_5x5_reduce"
  top: "inception_4d_5x5_reduce"
}
layer {
  name: "inception_4d_5x5"
  type: "Convolution"
  bottom: "inception_4d_5x5_reduce"
  top: "inception_4d_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4d_5x5"
  top: "inception_4d_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_5x5"
  type: "ReLU"
  bottom: "inception_4d_5x5"
  top: "inception_4d_5x5"
}
layer {
  name: "inception_4d_pool"
  type: "Pooling"
  bottom: "inception_4c_output"
  top: "inception_4d_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d_pool_proj"
  type: "Convolution"
  bottom: "inception_4d_pool"
  top: "inception_4d_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4d_pool_proj"
  top: "inception_4d_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d_pool_proj"
  top: "inception_4d_pool_proj"
}
layer {
  name: "inception_4d_output"
  type: "Concat"
  bottom: "inception_4d_1x1"
  bottom: "inception_4d_3x3"
  bottom: "inception_4d_5x5"
  bottom: "inception_4d_pool_proj"
  top: "inception_4d_output"
}
layer {
  name: "inception_4e_1x1"
  type: "Convolution"
  bottom: "inception_4d_output"
  top: "inception_4e_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4e_1x1"
  top: "inception_4e_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_1x1"
  type: "ReLU"
  bottom: "inception_4e_1x1"
  top: "inception_4e_1x1"
}
layer {
  name: "inception_4e_3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d_output"
  top: "inception_4e_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e_3x3_reduce"
  top: "inception_4e_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e_3x3_reduce"
  top: "inception_4e_3x3_reduce"
}
layer {
  name: "inception_4e_3x3"
  type: "Convolution"
  bottom: "inception_4e_3x3_reduce"
  top: "inception_4e_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4e_3x3"
  top: "inception_4e_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_3x3"
  type: "ReLU"
  bottom: "inception_4e_3x3"
  top: "inception_4e_3x3"
}
layer {
  name: "inception_4e_5x5_reduce"
  type: "Convolution"
  bottom: "inception_4d_output"
  top: "inception_4e_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e_5x5_reduce"
  top: "inception_4e_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4e_5x5_reduce"
  top: "inception_4e_5x5_reduce"
}
layer {
  name: "inception_4e_5x5"
  type: "Convolution"
  bottom: "inception_4e_5x5_reduce"
  top: "inception_4e_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4e_5x5"
  top: "inception_4e_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_5x5"
  type: "ReLU"
  bottom: "inception_4e_5x5"
  top: "inception_4e_5x5"
}
layer {
  name: "inception_4e_pool"
  type: "Pooling"
  bottom: "inception_4d_output"
  top: "inception_4e_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4e_pool_proj"
  type: "Convolution"
  bottom: "inception_4e_pool"
  top: "inception_4e_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4e_pool_proj"
  top: "inception_4e_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4e_pool_proj"
  top: "inception_4e_pool_proj"
}
layer {
  name: "inception_4e_output"
  type: "Concat"
  bottom: "inception_4e_1x1"
  bottom: "inception_4e_3x3"
  bottom: "inception_4e_5x5"
  bottom: "inception_4e_pool_proj"
  top: "inception_4e_output"
}
layer {
  name: "pool4_3x3_s2"
  type: "Pooling"
  bottom: "inception_4e_output"
  top: "pool4_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_5a_1x1"
  type: "Convolution"
  bottom: "pool4_3x3_s2"
  top: "inception_5a_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_5a_1x1"
  top: "inception_5a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_1x1"
  type: "ReLU"
  bottom: "inception_5a_1x1"
  top: "inception_5a_1x1"
}
layer {
  name: "inception_5a_3x3_reduce"
  type: "Convolution"
  bottom: "pool4_3x3_s2"
  top: "inception_5a_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_5a_3x3_reduce"
  top: "inception_5a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5a_3x3_reduce"
  top: "inception_5a_3x3_reduce"
}
layer {
  name: "inception_5a_3x3"
  type: "Convolution"
  bottom: "inception_5a_3x3_reduce"
  top: "inception_5a_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_5a_3x3"
  top: "inception_5a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_3x3"
  type: "ReLU"
  bottom: "inception_5a_3x3"
  top: "inception_5a_3x3"
}
layer {
  name: "inception_5a_5x5_reduce"
  type: "Convolution"
  bottom: "pool4_3x3_s2"
  top: "inception_5a_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_5a_5x5_reduce"
  top: "inception_5a_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5a_5x5_reduce"
  top: "inception_5a_5x5_reduce"
}
layer {
  name: "inception_5a_5x5"
  type: "Convolution"
  bottom: "inception_5a_5x5_reduce"
  top: "inception_5a_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_5a_5x5"
  top: "inception_5a_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_5x5"
  type: "ReLU"
  bottom: "inception_5a_5x5"
  top: "inception_5a_5x5"
}
layer {
  name: "inception_5a_pool"
  type: "Pooling"
  bottom: "pool4_3x3_s2"
  top: "inception_5a_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5a_pool_proj"
  type: "Convolution"
  bottom: "inception_5a_pool"
  top: "inception_5a_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_5a_pool_proj"
  top: "inception_5a_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5a_pool_proj"
  top: "inception_5a_pool_proj"
}
layer {
  name: "inception_5a_output"
  type: "Concat"
  bottom: "inception_5a_1x1"
  bottom: "inception_5a_3x3"
  bottom: "inception_5a_5x5"
  bottom: "inception_5a_pool_proj"
  top: "inception_5a_output"
}
layer {
  name: "inception_5b_1x1"
  type: "Convolution"
  bottom: "inception_5a_output"
  top: "inception_5b_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_5b_1x1"
  top: "inception_5b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_1x1"
  type: "ReLU"
  bottom: "inception_5b_1x1"
  top: "inception_5b_1x1"
}
layer {
  name: "inception_5b_3x3_reduce"
  type: "Convolution"
  bottom: "inception_5a_output"
  top: "inception_5b_3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_5b_3x3_reduce"
  top: "inception_5b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5b_3x3_reduce"
  top: "inception_5b_3x3_reduce"
}
layer {
  name: "inception_5b_3x3"
  type: "Convolution"
  bottom: "inception_5b_3x3_reduce"
  top: "inception_5b_3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_5b_3x3"
  top: "inception_5b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_3x3"
  type: "ReLU"
  bottom: "inception_5b_3x3"
  top: "inception_5b_3x3"
}
layer {
  name: "inception_5b_5x5_reduce"
  type: "Convolution"
  bottom: "inception_5a_output"
  top: "inception_5b_5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_5b_5x5_reduce"
  top: "inception_5b_5x5_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5b_5x5_reduce"
  top: "inception_5b_5x5_reduce"
}
layer {
  name: "inception_5b_5x5"
  type: "Convolution"
  bottom: "inception_5b_5x5_reduce"
  top: "inception_5b_5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_5b_5x5"
  top: "inception_5b_5x5"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_5x5"
  type: "ReLU"
  bottom: "inception_5b_5x5"
  top: "inception_5b_5x5"
}
layer {
  name: "inception_5b_pool"
  type: "Pooling"
  bottom: "inception_5a_output"
  top: "inception_5b_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5b_pool_proj"
  type: "Convolution"
  bottom: "inception_5b_pool"
  top: "inception_5b_pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_5b_pool_proj"
  top: "inception_5b_pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5b_pool_proj"
  top: "inception_5b_pool_proj"
}
layer {
  name: "inception_5b_output"
  type: "Concat"
  bottom: "inception_5b_1x1"
  bottom: "inception_5b_3x3"
  bottom: "inception_5b_5x5"
  bottom: "inception_5b_pool_proj"
  top: "inception_5b_output"
}
layer {
  name: "pool5_7x7_s1"
  type: "Pooling"
  bottom: "inception_5b_output"
  top: "pool5_7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "pool5_drop_7x7_s1"
  type: "Dropout"
  bottom: "pool5_7x7_s1"
  top: "pool5_7x7_s1"
  dropout_param {
    dropout_ratio: 0.4
  }
}
layer {
  name: "loss3_classifier"
  type: "InnerProduct"
  bottom: "pool5_7x7_s1"
  top: "loss3_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "loss3_classifier"
  top: "prob"
}
